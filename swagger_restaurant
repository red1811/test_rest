swagger: '2.0'
info:
  title: API docs
  description: 'Test task restaurant '
  termsOfService: https://www.google.com/policies/terms/
  contact:
    email: contact@xyz.local
  license:
    name: BSD License
  version: v1
host: 127.0.0.1:8000
schemes:
  - http
basePath: /
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Basic:
    type: basic
security:
  - Basic: []
paths:
  /restaurant/:
    get:
      operationId: restaurant_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Restaurant'
      tags:
        - restaurant
    post:
      operationId: restaurant_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Restaurant'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Restaurant'
      tags:
        - restaurant
    parameters: []
  /restaurant/pizzas/:
    get:
      operationId: restaurant_pizzas_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - restaurant
    post:
      operationId: restaurant_pizzas_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - restaurant
    parameters: []
  /restaurant/pizzas/{id}:
    get:
      operationId: restaurant_pizzas_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Pizza'
      tags:
        - restaurant
    put:
      operationId: restaurant_pizzas_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Pizza'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Pizza'
      tags:
        - restaurant
    patch:
      operationId: restaurant_pizzas_partial_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Pizza'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Pizza'
      tags:
        - restaurant
    delete:
      operationId: restaurant_pizzas_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - restaurant
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this pizza.
        required: true
        type: integer
  /restaurant/{id}:
    get:
      operationId: restaurant_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Restaurant'
      tags:
        - restaurant
    put:
      operationId: restaurant_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Restaurant'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Restaurant'
      tags:
        - restaurant
    patch:
      operationId: restaurant_partial_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Restaurant'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Restaurant'
      tags:
        - restaurant
    delete:
      operationId: restaurant_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - restaurant
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this restaurant.
        required: true
        type: integer
  /users/:
    get:
      operationId: users_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      tags:
        - users
    parameters: []
  /users/{id}:
    get:
      operationId: users_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - users
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this user.
        required: true
        type: integer
definitions:
  Restaurant:
    required:
      - name
      - address
      - Pizzas
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 60
        minLength: 1
      address:
        title: Address
        type: string
        maxLength: 120
        minLength: 1
      Pizzas:
        type: array
        items:
          type: string
        uniqueItems: true
  Pizza:
    required:
      - rest_name_id
      - p_name
      - type_of_cheese
      - dought
      - secret
    type: object
    properties:
      rest_name_id:
        title: Rest name id
        type: integer
      id:
        title: Id
        type: integer
        readOnly: true
      p_name:
        title: P name
        type: string
        maxLength: 120
        minLength: 1
      type_of_cheese:
        title: Type of cheese
        type: string
        maxLength: 120
        minLength: 1
      dought:
        title: Dought
        type: string
        maxLength: 120
        minLength: 1
      secret:
        title: Secret
        type: string
        maxLength: 120
        minLength: 1
  User:
    required:
      - username
      - restaurants
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      restaurants:
        type: array
        items:
          type: integer
        uniqueItems: true
      owner:
        title: Owner
        type: string
        readOnly: true
